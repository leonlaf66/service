# 房源类型
type House {
  id: ID!
  nm: String
  loc: String
  prop: String
  photo(idx:Int = 1, w:Int = 800, h:Int = 600): String
  photos(w:Int=800, h:Int=600): [String!]
  price: Float
  date(format: String = "YYYY-MM-DD HH:ii:ss"): Date
  beds: Int
  baths: [Int]
  zip_code: String
  status: String
  latlng: [Float]
  photo_cnt: Int
  square_feet: Int
  parking:Int
  garage:Int
  est_sale:Float
  is_in_sd: Boolean
  area_id: String
  estimation:JSON
  area: String
  taxes:Float
  roi: JSON
  details(includeRawValue:Boolean = false): JSON
  polygons: JSON
  # 相关房源
  associated_houses(first:Int = 5): [House]
}

# 推荐房源类型
type TopHouse {
  id: ID!
  image: String
  col_rule: String
  house: House
}

# 房源搜索分页类型
type HousePagination {
  total: Int
  items: [House]
}

# 房源筛选输入
input HouseFiltersInput {
  # 分类, SF/MF/CC/CI/BU/LD
  props: [String!]
  # 价格范围(单位:美元)
  price: FloatRangeInput
  # 城市ID
  city_id: Int
  # 多城市ID
  city_ids: [Int!]
  # 面积范围(单位:原始)
  square: FloatRangeInput,
  # 卧室数+
  beds: Int
  # 卫生间数+
  baths: Int
  # 上市天数 1最新 2本周 3本月
  ldays: Int
  # 车位数+
  parking: Int
  # 是否包含车库
  garage: Boolean
  # 坐标周边(默认2公里范围内)
  latlng: LatLngInput
  # 地铁线
  subway_line:Int
  # 地铁站点
  subway_stations: [Int!]
}

# 图片尺寸参数类型
input PhotoSizeInput {
  w: Int
  h: Int
}

# 房源统计
type HouseSummeries {
  totals: JSON
  marketes: JSON
}

# 房源查询类
type Query {
  # 搜索房源, 返回房源分页对象，包含results房源列表
  search_houses (only_rental: Boolean = false, q: String = "", filters: HouseFiltersInput, sort: Int = 1, first: Int = 15, skip: Int = 0) : HousePagination
  # 搜索地图房源
  map_search_houses (only_rental: Boolean = false, q: String = "", filters: HouseFiltersInput, first: Int = 1000, includePolygons: Boolean = false) : JSON
  # 获取一个房源的详情
  house (id: ID!) : House
  # 根据ids获取房源列表
  houses (ids: [ID!]) : [House]
  # 根据给定坐标+距离(单位:公里)获取周边房源列表
  nearby_houses (latlng: LatLngInput!, first: Int = 10, distance:Int = 2) : [House]
  # 获取房源统计
  area_house_summeries: HouseSummeries
  # 推荐精品房源
  top_houses (first: Int = 0): [TopHouse]
  # 房源搜索自动完成字典(城市+zipcode)
  autocomplete_cities (q: String = "", first: Int = 0) : JSON
}